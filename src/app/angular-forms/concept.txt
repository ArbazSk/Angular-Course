In Angular there are 2 types of Form
1. Template driven
2. Reactive driven

1. Template driven
* it is an static form 
* we write the code in html and connect it with ts with some directives
* by default whenever we have a form in html angular creates an JS Object for us. But its values are empty by default
* we need to add the properties to its.
* inputs are not registed in the object by defaults we need to tell the angular about the inputs

2. Reactive form
* we create form in ts and angular add the form in DOM


Template Driven Forms in Angular
* we add "name" attribute of html and add "ngModel" directive of angular to tell that the inputs belong to the forms
* By default of submiting form html form try to send the data which is default. Angular uses this and added 
    ngSubmit event listenser on form element in that method we can pass the form element reference to it which will contains the form data.

Form State
1. touched - when we click on the input and leave then it is touched
2. dirty - when we change the values of an input

Form Validation
whenever the form input state is changed then its property is also updated in the form object or control
it also add classes in the form control

Different ngModel type
1. ngModel (without single and 2-way binding) -> it tell the angulat that the input is a form control
2. [ngModel] -> can use it to set default data in form control (1-way binding)
3. [(ngModel)] -> can use it for 2-way binding

Form Group
ngModelGroup can be used to group the form control 
refer the html for the code
you will get the form group as the key in form object which will contains the form controls object



Reactive Form
* In reactive Form we create form in HTML and map its realted form obj in ts code.
* to Create a Form obj we create a FormGroup object and pass an object which contains form controls.
* to map ts and html we connect it using formControlName in html and pass the name same in the FormGroup
